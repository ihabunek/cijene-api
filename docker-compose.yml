services:
  db:
    image: postgres:17-alpine
    environment:
      POSTGRES_DB: cijene
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./service/db/psql.sql:/docker-entrypoint-initdb.d/01-init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d cijene"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  api:
    build: .
    environment:
      DB_DSN: postgresql://postgres:postgres@db/cijene
      HOST: 0.0.0.0
      PORT: 8000
      DEBUG: "false"
      BASE_URL: http://localhost:8000
      REDIRECT_URL: https://cijene.dev
      ARCHIVE_DIR: /app/data
      TIMEZONE: Europe/Zagreb
      DB_MIN_CONNECTIONS: 5
      DB_MAX_CONNECTIONS: 20
    command: ["uv", "run", "-m", "service.main"]
    volumes:
      - ./data:/app/data:ro
      - ./enrichment:/app/enrichment:ro
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  crawler:
    build: .
    environment:
      PYTHONUTF8: 1
    volumes:
      - ./data:/app/data
      - ./ouput:/app/output
    command: ["uv", "run", "-m", "crawler.cli.crawl", "/app/output"]
    profiles:
      - crawler
    restart: unless-stopped

volumes:
  postgres_data: